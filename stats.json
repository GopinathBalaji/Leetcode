{"leetcode":{"easy":10,"hard":0,"medium":16,"shas":{"0088-merge-sorted-array":{"0088-merge-sorted-array.java":"9b84d534df2f8f2bc488f6eb9606f792213da00d","README.md":"50730b6007ef4a20d99d504582778d3b2a0d4774","difficulty":"easy"},"README.md":{"":"2639a2d5d6f55f773d2957800d050638a5cc6bfb"},"0027-remove-element":{"0027-remove-element.java":"a44306e71d4d35a1b9f2b33c0d13303a176aae88","README.md":"1ab688a312e16f9d8c94dc797e0bcfeea600bcec","difficulty":"easy"},"stats.json":{"":"32b5d100479d6a4168902306d26e86a0701cdaad"},"0026-remove-duplicates-from-sorted-array":{"0026-remove-duplicates-from-sorted-array.java":"342bcca85395ba4e43c6e21e0ddeff584000dbf3","README.md":"347d48028e5b233f473e529176aa780f584325e5","difficulty":"easy"},"0080-remove-duplicates-from-sorted-array-ii":{"0080-remove-duplicates-from-sorted-array-ii.java":"495b12c8cec9d7d9f51178974eff7c4969a55702","README.md":"fe2bba6dc0853114e6fd85ca28bb4f52f76c7799","difficulty":"medium"},"0169-majority-element":{"0169-majority-element.java":"6f03d2fe5aa489fc6bddc139bac4b8a3e31b0e0c","README.md":"641edd368211891c146ad332f04dbe89234d2a11","difficulty":"easy"},"0125-valid-palindrome":{"0125-valid-palindrome.java":"54f1c5f3c314f0c602cd1e12ca2fcce9e122b5ca","README.md":"213d38e6bd9704d91b8759c7b29ebd97622cca49","difficulty":"easy"},"0392-is-subsequence":{"0392-is-subsequence.java":"254db1670aec8a8b36241cfca013962e504aac52","README.md":"8c4476fc5a2dbd2bc99ffa85164b350b665e20e9","difficulty":"easy"},"0167-two-sum-ii-input-array-is-sorted":{"0167-two-sum-ii-input-array-is-sorted.java":"76dbd5e071535be4fe05306a32ac939998b48f83","README.md":"9cace0eb3d59e65c56c0e1a9c379e190b2a25941","difficulty":"medium"},"0011-container-with-most-water":{"0011-container-with-most-water.java":"e95d599a5842d576eb80e700896003fd06d6b163","README.md":"d639cbc775d69587c4d50e25339787fc8d8bf70a","difficulty":"medium"},"0015-3sum":{"0015-3sum.java":"8594054664800cbcb76a5b00a7806db75b45d253","README.md":"84e5854cd32cb65d06da712e6329d17566651913","difficulty":"medium"},"0209-minimum-size-subarray-sum":{"0209-minimum-size-subarray-sum.java":"ebd5b09c27bfa476171f27aea5798785cf7ef6d2","README.md":"6175d13534a18976ac44650d27ae421dbeee2c30","difficulty":"medium"},"0003-longest-substring-without-repeating-characters":{"0003-longest-substring-without-repeating-characters.java":"1f57cab5e0874f98915c55ecb7edc5c113c21631","README.md":"76430b4ca3f89e9447aba0f80390214b0903c119","difficulty":"medium"},"0053-maximum-subarray":{"0053-maximum-subarray.java":"78ff13651ef9ea356de953b3763aa618e52a2827","README.md":"d5a3ebbc32f90c704f218540f37b5cba9883d539","difficulty":"medium"},"0954-maximum-sum-circular-subarray":{"0954-maximum-sum-circular-subarray.java":"afb2ac9c06ea00a91a3e496fdaf5dca3f5833c28","README.md":"03a38e407f8647ff2d71f040c0cc3ebd45b55611","difficulty":"medium"},"0035-search-insert-position":{"0035-search-insert-position.java":"bc6dd0d289c5406885ec410264236ea8d05ad406","README.md":"f7e96ce58f8df7b936c2c3670c12a52643a05bf6","difficulty":"easy"},"0074-search-a-2d-matrix":{"0074-search-a-2d-matrix.py":"e83b9a3d5fd5817c2b4bf5a212c6acdbadedd6e2","README.md":"64bc66d8f0607f31bfbd40f3aab4f005e2078612","difficulty":"medium"},"0162-find-peak-element":{"0162-find-peak-element.py":"52a0bf4b0b528bc775ab7c3f56ed123dc238eb3f","README.md":"511544c464bc7b44d0e1c5d6931b7e4e6c3d9ce9","difficulty":"medium"},"0033-search-in-rotated-sorted-array":{"README.md":"abac798678095507f22966997c719cde31f2a5b4"},"0034-find-first-and-last-position-of-element-in-sorted-array":{"0034-find-first-and-last-position-of-element-in-sorted-array.py":"86aa6eedce902cc8b05fb02da66a66d7ef9ad154","README.md":"567e3eedc797db77ac13d34c49731ab95533307b","difficulty":"medium"},"0153-find-minimum-in-rotated-sorted-array":{"0153-find-minimum-in-rotated-sorted-array.py":"7555e216931521a45a6b365cc96ae37860890e33","README.md":"600ad5a169903c578c661c0f571748dc2de102e8","difficulty":"medium"},"0100-same-tree":{"0100-same-tree.py":"5a7669aedf4b6ff06f7fd68921ac5445f8630429","README.md":"e68046f2dc906bcd38453dd92eec5c257d4694a9","difficulty":"easy"},"0104-maximum-depth-of-binary-tree":{"README.md":"3e88d40eac7067a0b69cceb90c76020b6f152ae0"},"0226-invert-binary-tree":{"0226-invert-binary-tree.py":"363a36a5115405ca8d20e9feb32b0a1acccdfaa1","README.md":"50f4a6354112c1afacef29ffc7209e5f9f7095d8","difficulty":"easy"},"0101-symmetric-tree":{"0101-symmetric-tree.py":"153b9a826e6c51ef7c9163190c6732285babe458","README.md":"1f2113012a39cfbad1ebdddb1b47cba18e5fa452","difficulty":"easy"},"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.py":"b32f912dfbb7319758a4e81053ef486b786d1810","README.md":"75ac83be2e52aa76ea9bd5c9c20537a499cb9ec0","difficulty":"medium"},"0106-construct-binary-tree-from-inorder-and-postorder-traversal":{"0106-construct-binary-tree-from-inorder-and-postorder-traversal.py":"efd144275884d4c2f4c0eb6a94363d4f0bcb1d09","README.md":"8169bc76429370954eb33bb078940c0a05066e29","difficulty":"medium"},"0117-populating-next-right-pointers-in-each-node-ii":{"0117-populating-next-right-pointers-in-each-node-ii.py":"9f67a7e1fde860c3c999ee07db1702c0d8c9d803","README.md":"884e1ff07d0edfb9c52d02ccac4bc0edcc5b0610","difficulty":"medium"},"0114-flatten-binary-tree-to-linked-list":{"0114-flatten-binary-tree-to-linked-list.py":"5a15298bc3f1ba5a0fdfdb4815f1cf5f27c6f159","README.md":"581431bf3d62fd3a541ca6eb01543cb6f06b71a8","difficulty":"medium"}},"solved":26}}